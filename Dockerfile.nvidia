FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04 AS builder

ENV MINIFORGE_HOME=/opt/miniforge
ENV PATH="$MINIFORGE_HOME/bin:$PATH"
# https://docs.conda.io/projects/conda/en/stable/user-guide/tasks/manage-virtual.html
ENV CONDA_OVERRIDE_CUDA=11.8

RUN apt-get update && apt-get install -y wget git && \
    wget https://github.com/conda-forge/miniforge/releases/download/23.3.1-0/Miniforge3-Linux-x86_64.sh -O /tmp/miniforge.sh && \
    bash /tmp/miniforge.sh -b -p $MINIFORGE_HOME && \
    rm /tmp/miniforge.sh

COPY environment_gpu.yml /home/ops/environment_gpu.yml
RUN mamba env create -f /home/ops/environment_gpu.yml && \
    conda clean --all --yes && rm -rf /opt/miniforge/pkgs/*

# Final container
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04
COPY --from=builder /opt/miniforge /opt/miniforge
ENV PATH="/opt/miniforge/bin:$PATH"
ENV CONDA_OVERRIDE_CUDA=11.8

RUN groupadd -g 1000 --system dist_user && \
    useradd -l -u 1000 -g 1000 --system -d /home/ops -m -s /bin/bash dist_user && \
    chown -R dist_user:dist_user /opt

USER dist_user
WORKDIR /home/ops

# Copy application
COPY --chown=dist_user:dist_user . /home/ops/dist-s1/
RUN python -m pip install --no-cache-dir /home/ops/dist-s1

ENTRYPOINT ["/bin/bash", "-l", "-c"]
CMD ["echo Greetings from OPERA DIST-S1 team"]
